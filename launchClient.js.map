{"version":3,"sources":["../src/launchClient.js"],"names":["React","createBrowserHistory","hydrate","scheduleHydration","registerServiceWorker","unregister","PWA","launchClient","App","theme","model","router","target","document","getElementById","errorReporter","Function","prototype","serviceWorker","delayHydrationUntilPageLoad","additionalDelay","history","component","providerProps"],"mappings":"AAAA;;;;AAIA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,qBAAP,IAAgCC,UAAhC,QAAkD,yBAAlD;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA;;;;;;;;;;;;AAWA,eAAe,SAASC,YAAT,OAUZ;AAAA,MATDC,GASC,QATDA,GASC;AAAA,MARDC,KAQC,QARDA,KAQC;AAAA,MAPDC,KAOC,QAPDA,KAOC;AAAA,MANDC,MAMC,QANDA,MAMC;AAAA,yBALDC,MAKC;AAAA,MALDA,MAKC,4BALQC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAKR;AAAA,gCAJDC,aAIC;AAAA,MAJDA,aAIC,mCAJeC,QAAQ,CAACC,SAIxB;AAAA,gCAHDC,aAGC;AAAA,MAHDA,aAGC,mCAHe,IAGf;AAAA,mCAFDC,2BAEC;AAAA,MAFDA,2BAEC,sCAF6B,KAE7B;AAAA,MADDC,eACC,QADDA,eACC;AACDjB,EAAAA,iBAAiB,CAACgB,2BAAD,EAA8BC,eAA9B,EAA+C,YAAM;AACpE,QAAMC,OAAO,GAAGpB,oBAAoB,EAApC;AAEAC,IAAAA,OAAO,CAAC;AACNoB,MAAAA,SAAS,EACP,oBAAC,GAAD;AAAK,QAAA,aAAa,EAAEP;AAApB,SACE,oBAAC,GAAD,OADF,CAFI;AAMNL,MAAAA,KAAK,EAALA,KANM;AAOND,MAAAA,KAAK,EAALA,KAPM;AAQNG,MAAAA,MAAM,EAANA,MARM;AASNW,MAAAA,aAAa,EAAE;AACbF,QAAAA,OAAO,EAAPA,OADa;AAEbV,QAAAA,MAAM,EAANA;AAFa;AATT,KAAD,CAAP;AAcD,GAjBgB,CAAjB;;AAmBA,MAAIO,aAAJ,EAAmB;AACjBd,IAAAA,qBAAqB;AACtB,GAFD,MAEO;AACLC,IAAAA,UAAU;AACX;AACF","sourcesContent":["/**\n * @license\n * Copyright Â© 2017-2018 Moov Corporation.  All rights reserved.\n */\nimport React from 'react'\nimport { createBrowserHistory } from 'history'\nimport hydrate from './utils/hydrate'\nimport scheduleHydration from './utils/scheduleHydration'\nimport registerServiceWorker, { unregister } from './registerServiceWorker'\nimport PWA from './PWA'\n\n/**\n * Bootstraps the PWA react application.\n * @param {options} options\n * @param {React.Element} options.App The root app element\n * @param {Object} options.theme A material-ui theme\n * @param {Class} options.model A mobx-state-tree model class, typically extending `react-storefront/model/AppModelBase`\n * @param {HTMLElement} options.target The DOM element to mount onto\n * @param {Function} options.errorReporter A function to call when an error occurs so that it can be logged, typically located in `src/errorReporter.js`.\n * @param {Boolean} options.serviceWorker A flag for controlling if a service worker is registered\n * @param {Boolean} options.delayHydrationUntilPageLoad If `true` hydration will not occur until the window load event.  This helps improve initial page load time, especially largest image render.\n */\nexport default function launchClient({\n  App,\n  theme,\n  model,\n  router,\n  target = document.getElementById('root'),\n  errorReporter = Function.prototype,\n  serviceWorker = true,\n  delayHydrationUntilPageLoad = false,\n  additionalDelay\n}) {\n  scheduleHydration(delayHydrationUntilPageLoad, additionalDelay, () => {\n    const history = createBrowserHistory()\n\n    hydrate({\n      component: (\n        <PWA errorReporter={errorReporter}>\n          <App />\n        </PWA>\n      ),\n      model,\n      theme,\n      target,\n      providerProps: {\n        history,\n        router\n      }\n    })\n  })\n\n  if (serviceWorker) {\n    registerServiceWorker()\n  } else {\n    unregister()\n  }\n}\n"],"file":"launchClient.js"}