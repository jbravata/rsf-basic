{"version":3,"sources":["../../src/router/withGlobalState.js"],"names":["withGlobalState","request","globalState","localState","path","endsWith"],"mappings":";;;;;;AAAA;;;;;AAIA;;;;;;;;;;;;;;;;;;;AAmBA,wBAA8BA,eAA9B;AAAA;AAAA;;;;;2BAAe,iBAA+BC,OAA/B,EAAwCC,WAAxC,EAAqDC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA,iBACTF,OAAO,CAACG,IAAR,CAAaC,QAAb,CAAsB,OAAtB,CADS;AAAA;AAAA;AAAA;;AAAA,6CAEJF,UAFI;;AAAA;AAAA,kBAIP,OAAOD,WAAP,KAAuB,UAJhB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAKWA,WAAW,CAACD,OAAD,CALtB;;AAAA;AAKTC,YAAAA,WALS;;AAAA;AAAA,+DAOCA,WAPD,EAOiBC,UAPjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["/**\n * @license\n * Copyright Â© 2017-2018 Moov Corporation.  All rights reserved.\n */\n/**\n * When doing SSR, returns `globalState` and `localState` merged.  When responding to an AJAX\n * request, only returns `localState`.\n *\n * Example:\n *\n * ```js\n * async function productHandler({ id }, state, request) {\n *   const product = await fetchProductFromUpstreamAPI() // get product info from upstream API\n *   const globalState = () => fetchMenuData() // async function that makes an api call to get menu data.  Will only be called during ssr\n *   return withGlobalState(request, globalState, product)\n * }\n * ```\n *\n * @param {Request} request The request object passed into the handler\n * @param {Object/Function} globalState An object containing data that is needed for all landing pages, such as menu items, navigation, etc..., or a function that returns this data.\n * @param {Object} localState The state being returned for the specific URL being handled.\n * @return {Object} Data to be applied to the state tree.\n */\nexport default async function withGlobalState(request, globalState, localState) {\n  if (request.path.endsWith('.json')) {\n    return localState\n  } else {\n    if (typeof globalState === 'function') {\n      globalState = await globalState(request)\n    }\n    return { ...globalState, ...localState }\n  }\n}\n"],"file":"withGlobalState.js"}