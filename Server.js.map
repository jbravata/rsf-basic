{"version":3,"sources":["../src/Server.js"],"names":["React","SheetsRegistry","flushChunkNames","PWA","createMemoryHistory","Helmet","renderHtml","renderInitialStateScript","renderScript","renderStyle","renderPreloadHeader","getScripts","getStats","renderAmpAnalyticsTags","ROUTES","flattenDeep","requestContext","Server","theme","model","App","router","deferScripts","transform","errorReporter","Function","prototype","sendPreloadHeaders","request","response","profile","console","error","log","warn","history","initialEntries","path","search","headers","get","json","routes","map","route","spec","reportError","app","state","on","runAll","proxyUpstream","headersSent","renderPWA","renderError","off","Object","assign","endsWith","set","protocol","hostname","port","setContentType","send","JSON","stringify","amp","sheetsRegistry","create","initialWidth","location","chunkNames","stats","component","providers","analytics","registry","html","helmet","renderStatic","chunks","scripts","chunk","join","htmlAttributes","toString","title","meta","link","script","bodyAttributes","minify","Boolean","routeData","defer","src","redirect","replace","e","status","page","message","stack","process","env","MOOV_ENV"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Â© 2017-2018 Moov Corporation.  All rights reserved.\n */\n\nimport React from 'react'\nimport { SheetsRegistry } from 'react-jss/lib/jss'\nimport { flushChunkNames } from 'react-universal-component/server'\nimport PWA from './PWA'\nimport { createMemoryHistory } from 'history'\nimport { Helmet } from 'react-helmet'\nimport {\n  renderHtml,\n  renderInitialStateScript,\n  renderScript,\n  renderStyle,\n  renderPreloadHeader,\n  getScripts\n} from './renderers'\nimport getStats from 'react-storefront-stats'\nimport { renderAmpAnalyticsTags } from './Track'\nimport { ROUTES } from './router/headers'\nimport flattenDeep from 'lodash/flattenDeep'\nimport requestContext from './requestContext'\nimport './utils/profile'\n\n/**\n * A request handler for the server.\n * @param {Object} config\n * @param {Object} config.theme A material-UI theme\n * @param {Class} config.model The model class for the root of the state tree\n * @param {React.Component} config.App The root app component\n * @param {Router} config.router An instance of moov_router's Router class\n * @param {Boolean} config.deferScripts Adds the defer attribute to all script tags to speed up initial page render. Defaults to true.\n * @param {Function} config.transform A function to transform the rendered HTML before it is sent to the browser\n * @param {Function} config.errorReporter A function to call when an error occurs so that it can be logged\n */\nexport default class Server {\n  constructor({\n    theme,\n    model,\n    App,\n    router,\n    deferScripts = true,\n    transform,\n    errorReporter = Function.prototype,\n    sendPreloadHeaders = true\n  }) {\n    console.error = console.warn = console.log\n\n    Object.assign(this, {\n      theme,\n      model,\n      App,\n      router,\n      deferScripts,\n      transform,\n      errorReporter,\n      sendPreloadHeaders\n    })\n  }\n\n  /**\n   * Handles an isomorphic request by serving json, html, or amp content based on the URL.\n   */\n  serve = async (request, response) => {\n    return profile('x-rsf-t-serve', async () => {\n      console.error = console.error || console.log\n      console.warn = console.warn || console.log\n\n      const history = createMemoryHistory({\n        initialEntries: [request.path + request.search]\n      })\n\n      if (request.headers.get(ROUTES)) {\n        return response.json(this.router.routes.map(route => route.path.spec))\n      }\n\n      let state\n\n      const reportError = error => {\n        this.errorReporter({ error, history, app: state })\n      }\n\n      try {\n        this.router.on('error', reportError)\n        state = await this.router.runAll(request, response)\n\n        if (!state.proxyUpstream && !response.headersSent) {\n          await this.renderPWA({ request, response, state, history })\n        }\n      } catch (e) {\n        reportError(e)\n        await this.renderError(e, request, response, history)\n      } finally {\n        this.router.off('error', this.errorReporter)\n      }\n    })\n  }\n\n  /**\n   * Sets the content type to application/json for json URLs, text/html for all others\n   * @private\n   * @param {Object} request\n   * @param {Response} response\n   */\n  setContentType(request, response) {\n    if (response.get('content-type') == null) {\n      if (request.path.endsWith('.json')) {\n        response.set('content-type', 'application/json')\n      } else {\n        response.set('content-type', 'text/html')\n      }\n    }\n  }\n\n  /**\n   * Renders either a JSON or HTML response for the given state based on the path suffix.\n   * @private\n   * @param {Object} options\n   * @param {Object} options.request The current request object\n   * @param {Response} options.response The current response object\n   * @param {Object} options.state The app state\n   * @param {Object} options.history The js history object\n   * @return The html for app\n   */\n  async renderPWA({ request, response, state, history }) {\n    console.error = console.error || console.log\n    console.warn = console.warn || console.log\n\n    const { App, theme } = this\n    const { protocol, hostname, port, path, search } = request\n    this.setContentType(request, response)\n\n    if (path.endsWith('.json')) {\n      return response.send(JSON.stringify(state))\n    }\n\n    const amp = path.endsWith('.amp')\n    const sheetsRegistry = new SheetsRegistry()\n\n    const model = this.model.create({\n      ...state,\n      amp,\n      initialWidth: amp ? 'xs' : state.initialWidth,\n      location: {\n        ...history.location,\n        port,\n        protocol,\n        hostname\n      }\n    })\n\n    this.chunkNames = []\n\n    try {\n      const stats = await getStats()\n\n      let html = await profile('x-rsf-t-render-html', () =>\n        renderHtml({\n          component: (\n            <PWA>\n              <App />\n            </PWA>\n          ),\n          providers: {\n            app: model,\n            history,\n            analytics: {},\n            router: this.router\n          },\n          registry: sheetsRegistry,\n          theme\n        })\n      )\n\n      const helmet = Helmet.renderStatic()\n\n      const chunks = flushChunkNames(stats)\n\n      const scripts = flattenDeep([\n        chunks.map(chunk => getScripts({ stats, chunk })),\n        getScripts({ stats, chunk: 'main' })\n      ])\n\n      // Set prefetch headers so that our scripts will be fetched\n      // and loaded as fast as possible\n      if (this.sendPreloadHeaders) {\n        response.set('link', scripts.map(renderPreloadHeader).join(', '))\n      }\n\n      html = `\n        <!DOCTYPE html>\n        <html ${helmet.htmlAttributes.toString()}>\n          <head>\n            ${helmet.title.toString()}\n            <noscript id=\"jss-insertion-point\"></noscript>\n            ${helmet.meta.toString()}\n            ${helmet.link.toString()}\n            ${helmet.script.toString()}\n          </head>\n          <body ${helmet.bodyAttributes.toString()}>\n            ${await renderStyle({\n              registry: sheetsRegistry,\n              minify: Boolean(amp)\n            })}\n            <noscript>\n              You need to enable JavaScript to run this app.\n            </noscript>\n            <div id=\"root\">${html}</div>\n            ${\n              amp\n                ? ''\n                : `\n              ${renderInitialStateScript({\n                state: model,\n                routeData: state,\n                defer: this.deferScripts\n              })}\n              ${scripts.map(src => renderScript(src, this.deferScripts)).join('')}\n            `\n            }\n          </body>\n        </html>\n      `\n\n      if (typeof this.transform === 'function') {\n        html = await this.transform(html, {\n          model,\n          sheetsRegistry,\n          helmet\n        })\n      }\n\n      if (amp && (!requestContext.get('amp-enabled') || !requestContext.get('amp-transformed'))) {\n        console.warn('\\nAMP not enabled')\n        if (!requestContext.get('amp-enabled')) {\n          console.warn('\\twithAMP was not used')\n        }\n        if (!requestContext.get('amp-transformed')) {\n          console.warn('\\ttransformAmpHtml was not used')\n        }\n        console.warn('Redirecting to the PWA.')\n        response.redirect(path.replace(/\\.amp/, '') + search, 302)\n        return\n      }\n\n      response.send(html)\n    } catch (e) {\n      // flush head content to prevent memory leak, see https://github.com/nfl/react-helmet#server-usage\n      Helmet.renderStatic()\n\n      // flush amp analytics tags to prevent memory leak\n      renderAmpAnalyticsTags(model)\n\n      throw e\n    }\n  }\n\n  /**\n   * Renders an error response, either as JSON or SSR HTML, depending on the suffix\n   * on the request path.\n   * @private\n   * @param {Error} e\n   * @param {Request} request\n   * @param {Response} response\n   */\n  async renderError(e, request, response, history) {\n    response.status(500, 'error')\n\n    const state = {\n      page: 'Error',\n      error: e.message,\n      stack: process.env.MOOV_ENV === 'production' ? null : e.stack\n    }\n\n    if (request.path.endsWith('.json')) {\n      response.send(state)\n    }\n\n    try {\n      await this.renderPWA({\n        request,\n        response,\n        state,\n        history\n      })\n    } catch (err) {\n      response.send(\n        process.env.MOOV_ENV === 'production'\n          ? 'An unknown error occurred while attempting to process your request.'\n          : err.stack\n      )\n    }\n  }\n}\n"],"file":"Server.js"}